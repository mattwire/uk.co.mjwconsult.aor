diff --git a/CRM/Contribute/Form/Contribution.php b/CRM/Contribute/Form/Contribution.php
index 5b4c153daac..77573cff1d0 100644
--- a/CRM/Contribute/Form/Contribution.php
+++ b/CRM/Contribute/Form/Contribution.php
@@ -353,18 +353,18 @@ public function setDefaultValues() {
       if (!empty($defaults['tax_amount'])) {
         $componentDetails = CRM_Contribute_BAO_Contribution::getComponentDetails($this->_id);
         if (!(CRM_Utils_Array::value('membership', $componentDetails) || CRM_Utils_Array::value('participant', $componentDetails))) {
-          $defaults['total_amount'] = CRM_Utils_Money::format($defaults['total_amount'] - $defaults['tax_amount'], NULL, '%a');
+          $defaults['total_amount'] = CRM_Utils_Money::formatLocaleNumeric($defaults['total_amount'] - $defaults['tax_amount']);
         }
       }
       else {
-        $defaults['total_amount'] = CRM_Utils_Money::format($defaults['total_amount'], NULL, '%a');
+        $defaults['total_amount'] = CRM_Utils_Money::formatLocaleNumeric($defaults['total_amount']);
       }
     }
 
     $amountFields = array('non_deductible_amount', 'fee_amount', 'net_amount');
     foreach ($amountFields as $amt) {
       if (isset($defaults[$amt])) {
-        $defaults[$amt] = CRM_Utils_Money::format($defaults[$amt], NULL, '%a');
+        $defaults[$amt] = CRM_Utils_Money::formatLocaleNumeric($defaults[$amt]);
       }
     }
 
diff --git a/CRM/Member/Form/MembershipConfig.php b/CRM/Member/Form/MembershipConfig.php
index e3f2df0ba71..e6cf6b536c1 100644
--- a/CRM/Member/Form/MembershipConfig.php
+++ b/CRM/Member/Form/MembershipConfig.php
@@ -83,7 +83,7 @@ public function setDefaultValues() {
     }
 
     if (isset($defaults['minimum_fee'])) {
-      $defaults['minimum_fee'] = CRM_Utils_Money::format($defaults['minimum_fee'], NULL, '%a');
+      $defaults['minimum_fee'] = CRM_Utils_Money::formatLongDecimal($defaults['minimum_fee']);
     }
 
     if (isset($defaults['status'])) {
diff --git a/CRM/Price/BAO/PriceSet.php b/CRM/Price/BAO/PriceSet.php
index 7d92106f670..6cd1fb9b0f4 100644
--- a/CRM/Price/BAO/PriceSet.php
+++ b/CRM/Price/BAO/PriceSet.php
@@ -838,9 +838,7 @@ public static function processAmount($fields, &$params, &$lineItem, $component =
         $params['amount_level'] = CRM_Core_DAO::VALUE_SEPARATOR . implode(CRM_Core_DAO::VALUE_SEPARATOR, $amount_level) . $displayParticipantCount . CRM_Core_DAO::VALUE_SEPARATOR;
       }
     }
-    // @todo this was a fix for CRM-16460 but is too deep in the system for formatting
-    // and probably causes negative amounts to save as $0 depending on server config.
-    $params['amount'] = CRM_Utils_Money::format($totalPrice, NULL, NULL, TRUE);
+    $params['amount'] = CRM_Utils_Money::formatLongDecimal($totalPrice);
     $params['tax_amount'] = $totalTax;
     if ($component) {
       foreach ($autoRenew as $dontCare => $eachAmount) {
diff --git a/CRM/Utils/Money.php b/CRM/Utils/Money.php
index edabc904469..82b82cdffd8 100644
--- a/CRM/Utils/Money.php
+++ b/CRM/Utils/Money.php
@@ -38,7 +38,138 @@ class CRM_Utils_Money {
   static $_currencySymbols = NULL;
 
   /**
-   * Format a monetary string.
+   * Warn if php money_format() doesn't exist as they are likely to experience issues displaying currency.
+   * @return bool
+   */
+  private static function moneyFormatExists() {
+    // money_format() exists only in certain PHP install (CRM-650)
+    if (!function_exists('money_format')) {
+      Civi::log()->warning('PHP money_format function does not exist. Monetary amounts may not format correctly for display.');
+      return FALSE;
+    };
+    return TRUE;
+  }
+
+  /**
+   * FIXME: This should probably be changed
+   * @param $amount
+   *
+   * @return mixed
+   */
+  public static function formatLongDecimal($amount) {
+    return filter_var($amount, FILTER_SANITIZE_NUMBER_FLOAT, FILTER_FLAG_ALLOW_FRACTION);
+  }
+
+  /**
+   * Format money for display (just numeric part) according to the current locale
+   *
+   * @param $amount
+   *
+   * @return string
+   */
+  public static function formatLocaleNumeric($amount) {
+    $config = CRM_Core_Config::singleton();
+    $format = $config->moneyvalueformat;
+    return self::formatNumeric($amount, $format);
+  }
+
+  /**
+   * Format money for display (just numeric part). Specify format or use formatLocaleNumeric() instead.
+   *
+   * @param $amount
+   * @param $valueFormat
+   *
+   * @return string
+   */
+  public static function formatNumeric($amount, $valueFormat) {
+    if (CRM_Utils_System::isNull($amount)) {
+      return '';
+    }
+
+    $moneyFormatExists = self::moneyFormatExists();
+    if (is_numeric($amount) && $moneyFormatExists) {
+      $lc = setlocale(LC_MONETARY, 0);
+      setlocale(LC_MONETARY, 'en_US.utf8', 'en_US', 'en_US.utf8', 'en_US', 'C');
+      $amount = money_format($valueFormat, $amount);
+      setlocale(LC_MONETARY, $lc);
+    }
+    return $amount;
+  }
+
+  /**
+   * Format money for display (with symbols etc) according to the current locale
+   * @param $amount
+   * @param null $currency
+   *
+   * @return string
+   */
+  public static function formatLocaleFull($amount, $currency = NULL) {
+    $config = CRM_Core_Config::singleton();
+    $format = $config->moneyformat;
+    $valueFormat = $config->moneyvalueformat;
+    return self::formatFull($amount, $format, $valueFormat, $currency);
+  }
+
+  /**
+   * Format money for display (with symbols etc). Specify format or use formatLocaleFull() instead.
+   * @param $amount
+   * @param $format
+   * @param $valueFormat
+   * @param null $currency
+   *
+   * @return string
+   */
+  public static function formatFull($amount, $format, $valueFormat, $currency = NULL) {
+    if (CRM_Utils_System::isNull($amount)) {
+      return '';
+    }
+
+    // If it contains tags, means that HTML was passed and the
+    // amount is already converted properly, so don't mess with it again.
+    if (strpos($amount, '<') !== FALSE) {
+      return $amount;
+    }
+
+    if (!self::$_currencySymbols) {
+      self::$_currencySymbols = CRM_Core_PseudoConstant::get('CRM_Contribute_DAO_Contribution', 'currency', array(
+        'keyColumn' => 'name',
+        'labelColumn' => 'symbol',
+      ));
+    }
+
+    if (!$currency) {
+      $config = CRM_Core_Config::singleton();
+      $currency = $config->defaultCurrency;
+    }
+
+    $moneyFormatExists = self::moneyFormatExists();
+    // setlocale() affects native gettext (CRM-11054, CRM-9976)
+    if (is_numeric($amount) && $moneyFormatExists) {
+      $lc = setlocale(LC_MONETARY, 0);
+      setlocale(LC_MONETARY, 'en_US.utf8', 'en_US', 'en_US.utf8', 'en_US', 'C');
+      $amount = money_format($valueFormat, $amount);
+      setlocale(LC_MONETARY, $lc);
+    }
+
+    // Replace separators
+    $rep = array(
+      ',' => $config->monetaryThousandSeparator,
+      '.' => $config->monetaryDecimalPoint,
+    );
+    $amount = strtr($amount, $rep);
+
+    // Final formatting
+    $replacements = array(
+      '%a' => $amount,
+      '%C' => $currency,
+      '%c' => CRM_Utils_Array::value($currency, self::$_currencySymbols, $currency),
+    );
+    return strtr($format, $replacements);
+  }
+
+  /**
+   * @deprecated Format a monetary string.
+   * Replaced by multiple different functions above
    *
    * Format a monetary string basing on the amount provided,
    * ISO currency code provided and a format string consisting of:
diff --git a/templates/CRM/Price/Form/Field.tpl b/templates/CRM/Price/Form/Field.tpl
index cddc9e0a355..99c822ec20c 100644
--- a/templates/CRM/Price/Form/Field.tpl
+++ b/templates/CRM/Price/Form/Field.tpl
@@ -218,7 +218,7 @@
     var postUrl = "{/literal}{crmURL p='civicrm/ajax/memType' h=0}{literal}";
 
     cj.post( postUrl, {mtype: mtype}, function(data) {
-      cj("#option_amount_"+ row).val(data.total_amount);
+      cj("#option_amount_"+ row).val(data.total_amount_numeric);
       cj("#option_label_"+ row).val(data.name);
       cj("#option_financial_type_id_"+ row).val(data.financial_type_id);
       if (data.name) {
diff --git a/templates/CRM/Price/Form/Option.tpl b/templates/CRM/Price/Form/Option.tpl
index a52d23666b5..7c2335f37fd 100644
--- a/templates/CRM/Price/Form/Option.tpl
+++ b/templates/CRM/Price/Form/Option.tpl
@@ -115,7 +115,7 @@
         var mtype = cj("#membership_type_id").val();
         var postUrl = "{/literal}{crmURL p='civicrm/ajax/memType' h=0}{literal}";
         cj.post( postUrl, {mtype: mtype}, function( data ) {
-          cj("#amount").val( data.total_amount );
+          cj("#amount").val( data.total_amount_numeric );
           cj("#label").val( data.name );
 
         }, 'json');
